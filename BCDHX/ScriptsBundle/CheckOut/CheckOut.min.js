let UrlProcessCheckOut = window.location.origin + "/CheckOut/ProcessCheckOut";
let UrlPrcessCheckOutWithBalance = window.location.origin + "/CheckOut/PrcessCheckOutWithBalance";
let UrlCheckBalance = window.location.origin + "/CheckOut/CheckBalance"
let UrlAddMoreBalace = window.location.origin + "/Manage"
$("#payment_check").on("click", function (e) {
    e.preventDefault();
    fetch(UrlCheckBalance, {
        method: "POST",
        headers: {
            'Content-Type': 'application/json'
        }
    }).then(res => res.json()).then(x => {
        if (x.Status == 1) {
            Swal.fire({
                type: 'success',
                title: 'Xác nhận thanh toán bằng số dư!',
                showConfirmButton: true,
                confirmButtonColor: '#F3D930',
                width: 800,
                html: '<p style="font-weight:600">Số dư sau khi thanh toán :<span style="color:green"> ' + x.Error + '</span></p> ',
                allowOutsideClick: false
            }).then((result) => {
                if (result.value) {
                    var phonenumber = $("#phone").val();
                    var Shipping_Address = $("#address").val();
                    if (phonenumber == undefined || phonenumber == null || phonenumber == "") {
                        Swal.fire({
                            type: 'error',
                            title: 'Làm ơn điền số điện thoại!',
                            showConfirmButton: true,
                            confirmButtonColor: '#F3D930',
                            allowOutsideClick: false
                        }).then((result) => {
                            if (result.value) {
                                window.location.reload(true);
                            }
                        })
                    } else if (Shipping_Address == "" || Shipping_Address == undefined || Shipping_Address == null) {
                        Swal.fire({
                            type: 'error',
                            title: 'Làm ơn điền địa chỉ!',
                            showConfirmButton: true,
                            confirmButtonColor: '#F3D930',
                            allowOutsideClick: false
                        }).then((result) => {
                            if (result.value) {
                                window.location.reload(true);
                            }
                        })
                    }
                    else {

                        CheckOutForm("0");
                    }
                }
            })
        } else if (x.Status == 0) {
            Swal.fire({
                type: 'error',
                title: x.Error,
                showConfirmButton: true,
                confirmButtonColor: '#F3D930',
                html: '<p style="font-weight:600">Có lỗi xảy ra,xin thông báo qua livechat cho chúng tôi!</p>',
                allowOutsideClick: false
            }).then((result) => {
                if (result.value) {
                    window.location.reload(true);
                }
            })
        } else {
            Swal.fire({
                type: 'error',
                title: 'Không đủ số dư!',
                showConfirmButton: true,
                confirmButtonColor: '#F3D930',
                width: 800,
                html: '<p style="font-weight:600">Số dư còn lại:<span style="color:green">' + x.Error + '</span> Tài khoản không đủ số dư để thanh toán, có thể <a href="' + UrlAddMoreBalace + '"><span style="color:red"><i class="far fa-money-bill-alt">Nạp Thêm</i></span></a><br>Hoặc có thể chọn phương thức khác!</p> ',
                allowOutsideClick: false
            }).then((result) => {
                if (result.value) {
                    window.location.reload(true);
                }
            })
        }
    })
})
$("#CheckOutForm").on("submit", function (e) {
    e.preventDefault();
    var paymentMethod = $("input[name='payment-method']:checked").val();
    if (paymentMethod == undefined || paymentMethod == null) {
        Swal.fire({
            type: 'error',
            title: "Làm ơn chọn phương thức thanh toán!",
            showConfirmButton: true,
            confirmButtonColor: '#F3D930',
            allowOutsideClick: false
        })
    } else {
        var temp = {
            Payment_Methods: paymentMethod,
            Email: $("#Username").val(),
            Phone: $("#phone").val(),
            Shipping_Address: $("#address").val(),
            Fullname: $("#Fullname").val(),
            Orginal: $("#Orginal").val(),
            Note: $("#note").val()
        }
        $.ajax({
            type: 'POST',
            url: UrlProcessCheckOut,
            data: JSON.stringify(temp),
            contentType: 'application/json; charset=utf-8',
            beforeSend: function () {
                // setting a timeout
                $('body').loadingModal({
                    position: 'auto',
                    text: '',
                    color: '#fff',
                    opacity: '0.7',
                    backgroundColor: 'rgb(0,0,0)',
                    animation: 'circle'
                });
            },
            success: function (rs) {
                $('body').loadingModal('destroy');
                if (rs.Status == 1) {
                    Swal.fire({
                        type: 'success',
                        title: "Chờ trong giây lát chuyển đến trang thanh toán!",
                        showConfirmButton: true,
                        confirmButtonColor: '#F3D930',
                        width: 800,
                    });
                    setTimeout(function () {
                        window.location.href = "http://sandbox.baokim.vn/"+rs.Error;
                }, 2000);
                   
                }
                else {
                    Swal.fire({
                        type: 'error',
                        title: rs.Error,
                        showConfirmButton: true,
                        confirmButtonColor: '#F3D930',
                        width: 800,
                        allowOutsideClick: false
                    })
                }
            }, error: function (xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
                alert('Error - ' + errorMessage);
            }
        });
    }
})
function CheckOutForm(paymethod) {
    var temp = {
        Payment_Methods: paymethod,
        Email: $("#Username").val(),
        Phone: $("#phone").val(),
        Shipping_Address: $("#address").val(),
        Fullname: $("#Fullname").val(),
        Orginal: $("#Orginal").val(),
        Note: $("#note").val()
    }
    $.ajax({
        type: 'POST',
        url: UrlPrcessCheckOutWithBalance,
        data: JSON.stringify(temp),
        contentType: 'application/json; charset=utf-8',
        beforeSend: function () {
            // setting a timeout
            $('body').loadingModal({
                position: 'auto',
                text: '',
                color: '#fff',
                opacity: '0.7',
                backgroundColor: 'rgb(0,0,0)',
                animation: 'circle'
            });
        },
        success: function (rs) {
            $('body').loadingModal('destroy');
            if (rs.Status == 1) {
                window.location.href = rs.Error;
            } else if (rs.Status == 2) {
                Swal.fire({
                    type: 'error',
                    title: rs.Error,
                    showConfirmButton: true,
                    confirmButtonColor: '#F3D930',
                    width: 800,
                    allowOutsideClick: false
                })
            } else {
                Swal.fire({
                    type: 'error',
                    title: rs.Error,
                    showConfirmButton: true,
                    confirmButtonColor: '#F3D930',
                    width: 800,
                    allowOutsideClick: false
                })
            }

        }, error: function (xhr, status, error) {
            $('body').loadingModal('destroy');
            var errorMessage = xhr.status + ': ' + xhr.statusText
            alert('Error - ' + errorMessage);
        }
    });

}

