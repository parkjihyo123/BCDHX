let $ = jQuery.noConflict();
let Url = window.location.origin + "/AdminBCDH/ProcessWithProduct";
let UrlCategory = window.location.origin + "/AdminBCDH/ProcessWithCategory";
let UrlUploadImage = window.location.origin + "/AdminBCDH/ProcessWithImageProduct";
let StatusProduct = [{ Value: 1, Text: "Bình thường" }, { Value: 2, Text: "Hàng mới về" }, { Value: 3, Text: "Hàng bán chạy nhất" }, { Value: 4, Text: "Hàng có deal tốt nhất" }];
//let BannerPageTitle = [{ Value: 'PageBannerForProduct', Text: "Slide cho sản phẩm" }, { Value: 'PageBannerForCheckOut', Text: "Slide cho check out" }];
let NewArrivalConvert = [{ Value: 'true', Text: "Có" }, { Value: 'false', Text: "Không" }];
let Temp;
var ordersStore = new DevExpress.data.CustomStore({
    key: "ID_Product",
    load: function () {
        return sendRequest(Url + "/Getproducts", "GET");
    },
    insert: function (values) {
        return sendRequest(Url + "/AddProduct", "POST", {
            values: JSON.stringify(values)
        });
    },
    update: function (key, values) {
        return sendRequest(Url + "/EditProduct", "POST", {
            key: key,
            values: JSON.stringify(values)
        });
    },
    remove: function (key) {
        return sendRequest(Url + "/RemoveProduct", "POST", {
            key: key
        });
    }
});

function sendRequest(url, method, data) {
    var d = $.Deferred();
    method = method || "GET";
    $.ajax(url, {
        method: method || "GET",
        data: data,
        cache: false,

        xhrFields: { withCredentials: true }
    }).done(function (result) {
        d.resolve(method === "GET" ? result.data : result);
    }).fail(function (xhr) {
        d.reject(xhr.responseJSON ? xhr.responseJSON.Message : xhr.statusText);
    });
    return d.promise();
}

$("#Product").dxDataGrid({
    dataSource: ordersStore,
    headerFilter: {
        visible: true
    },
    filterPanel: {
        visible: true
    },
    filterRow: {
        visible: true
    },
    paging: {
        pageSize: 5
    },
    pager: {
        showPageSizeSelector: true,
        allowedPageSizes: [2, 5, 15,25,35],
        showInfo: true,
        visible: true
    },
    repaintChangesOnly: true,
    showBorders: true,
    columnAutoWidth: true,
    selection: {
        mode: "single"
    },
    onSelectionChanged: function (e) {
        e.component.collapseAll(-1);
        e.component.expandRow(e.currentSelectedRowKeys[0]);
    },
    editing: {
        refreshMode: "full",
        mode: "popup",
        allowAdding: true,
        allowUpdating: true,
        allowDeleting: true,
        texts: {
            confirmDeleteMessage: "Muốn xóa chứ ?",
            deleteRow: "Xóa",
            editRow: "Sửa",
            cancelRowChanges: "Hủy",
            saveRowChanges: "Lưu"

        },
        popup: {
            title: "Chỉnh sửa và thêm mới danh mục sản phẩm",
            showTitle: true,
            width: 1100,
            height: 600,
            position: {
                my: "top",
                at: "top",
                of: window
            }
        },
        form: {
            items: [{
                itemType: "group",
                colCount: 2,
                colSpan: 2,
                items: ["ID_Product", "ID_Category", "Name_Product", "Quantity", "Price", "Description", "Status", "Sale", "NewArrival", "BestSale"]
            },
            {
                itemType: "group",
                colCount: 2,
                colSpan: 2,
                caption: "Chú Ý Nên Đọc!",
                items: [{
                    dataField: "Chú thích",
                    editorType: "dxTextArea",
                    colSpan: 2,
                    editorOptions: {
                        width: 700,
                        height: 130,
                        readOnly: true,
                        value: "1. Muốn tạo một  sản phẩm mới , thì nhưng chỗ có * đỏ là cần thiết phải có. Mã sản phẩm không được trùng nhau" + "\n" + "2. Phải chọn sản phẩm thuộc danh mục sản phẩm nào !" + "\n" + "3. Các phần còn lại thì điền đủ và đúng là được!" + "\n" + "4.Giá thì điền số,sale cũng thế,nếu không sale thì điền 0 vào nhé "
                    }
                }
                ]
            }

            ]
        }
    },
    columns: [

        {


            dataField: "ID_Product",
            caption: "Mã sản phẩm",
            validationRules: [
                {
                    type: "required",
                    message: "Không được bỏ trống ID"
                }
                , {
                    type: "custom",
                    validationCallback: validateIdProduct
                }
            ]
        }
        ,
        {
            dataField: "ID_Category",
            caption: "Tên danh mục",
            //editCellTemplate: function (container, cellInfo) {
            //    var $ac = $("<div>").dxSelectBox({
            //        dataSource: new DevExpress.data.CustomStore({
            //            key: "ID_Category",
            //            loadMode: "raw",
            //            load: function () {
            //                return sendRequest(UrlCategory + "/GetIdOfCategory", "POST");
            //            }
            //        }),
            //        displayExpr: "ID_Category",
            //        valueExpr: "Name_Category",
            //        value: cellInfo.value,
            //        searchEnabled: true,
            //        onValueChanged: function (e) {
            //            cellInfo.setValue(e.component.option('selectedItem'));
            //        }
            //    });
            //    $ac.appendTo(container);
            //}
            //,
            lookup: {
                dataSource: new DevExpress.data.CustomStore({
                    key: "ID_Category",
                    loadMode: "raw",
                    load: function () {
                        return sendRequest(UrlCategory + "/GetIdOfCategory", "POST");
                    }
                }),
                onValueChanged: function (e) {
                    cellInfo.setValue(e.component.option('selectedItem'));
                },
                valueExpr: "ID_Category",
                displayExpr: "Name_Category"
            },

            validationRules: [{
                type: "required",
                message: "Không được để trống"
            }
            ],

        }

        ,
        {
            dataField: "Name_Product",
            caption: "Tên sản phẩm",
            validationRules: [{
                type: "required",
                message: "Không được để trống"
            }
            ]

        },
        {
            dataField: "Price",
            caption: "Giá sản phẩm",
            rtlEnabled: true,
            format: { style: "currency", currency: "VND", maximumFractionDigits: 2, useGrouping: true },
            validationRules: [{
                type: "required",
                message: "Không được để trống"
            }
            ]

        },
        {
            dataField: "Quantity",
            caption: "Số lượng sản phẩm",
            validationRules: [{
                type: "required",
                message: "Không được để trống"
            }, {
                type: "pattern",
                pattern: "^[0-9]*$",
                message: "Phải là số"

            }
            ]
        },
        {
            dataField: "Status",
            caption: "Trạng thái",
            lookup: {
                dataSource: StatusProduct,
                valueExpr: "Value",
                displayExpr: "Text",
                paginate: true
            },
            validationRules: [{
                type: "required",
                message: "Không được để trống"
            }
            ]
        },
        {
            dataField: "NewArrival",
            caption: "Hàng mới về",
            lookup: {
                dataSource: NewArrivalConvert,
                valueExpr: "Value",
                displayExpr: "Text",
                paginate: true
            },
           

        }
        , {
            dataField: "BestSale",
            caption: "Bán chạy nhất",
            lookup: {
                dataSource: NewArrivalConvert,
                valueExpr: "Value",
                displayExpr: "Text",
                paginate: true
            },
           
        },
        {
            dataField: "Sale",
            visible: false
        },
        {
            dataField: "Description",
            visible: false
        }


    ],
    masterDetail: {
        enabled: false,

        template: function (container, options) {

            var currentEmployeeData = options.data;

            $.ajax({
                url: Url + "/GetImageForProduct",
                method: "GET",
                data: { key: options.data.ID_Product },
                success: function (re) {
                    container.append($('<div style="width: 500px"><div class="row"><div class="col-sm-6"><img class="img-thumbnail" src="/Content/ImageUploaded/ImageForProduct/' + re.data + '" /></div><div class="col-sm-6"><div class="productinfo"><div class="productdes">' + currentEmployeeData.Description + '</div></div></div></div></div>'));
                }
            });
            //container.append($('<div class="employeeInfo"><img class="employeePhoto" src="' + "" + '" /><p class="employeeNotes">' + currentEmployeeData.Description + '</p></div>'));
        }
    }
    ,
    summary: {
        totalItems: [
            {
                column: "Name_Product",
                summaryType: "count",

                alignment: 'left',


                displayFormat: "Tổng sản phẩm: {0}",
            },

            {
                column: "Price",
                summaryType: "sum",
                displayFormat: "Tổng giá sản phẩm: {0}",
                valueFormat: { style: "currency", currency: "VND", maximumFractionDigits: 2, useGrouping: true }
            }
        ]

    }

}).dxDataGrid("instance");

function validateIdProduct(params) {
    var temp = {
        ID_Product: params.data.ID_Product,
        Name_Product: params.data.Name_Product
    }
    $.ajax({
        url: Url + "/IsVadiateIdProduct",
        method: "POST",
        data: { data: temp },
        //data: {
        //    data: params.value
        //},

        success: function (result) {
            params.rule.isValid = result.Result;
            if (result.Result == false) {
                params.rule.message = result.Message;
            }
            params.validator.validate();
        }
    });
    // Validation result until the response is received
    return false;
};

let UrlImageProduct = window.location.origin + "/AdminBCDH/ProcessWithImageProduct";
var ordersStoreImage = new DevExpress.data.CustomStore({
    key: "ID_ImageForProduct",
    load: function () {
        return sendRequest(UrlImageProduct + "/GetImageForProduct", "GET");
    },
    insert: function (values) {
        return sendRequest(UrlImageProduct + "/AddImageProduct", "POST", {
            values: JSON.stringify(values)
        });
    },
    update: function (key, values) {
        return sendRequest(UrlImageProduct + "/EditImageProduct", "POST", {
            key: key,
            values: JSON.stringify(values)
        });
    },
    remove: function (key) {
        return sendRequest(UrlImageProduct + "/RemoveImageProduct", "POST", {
            key: key
        });
    }
});




$("#ImageProduct").dxDataGrid({
    dataSource: ordersStoreImage,
    columnAutoWidth: true,
    showBorders: true,
    headerFilter: {
        visible: true
    },
    filterPanel: {
        visible: true
    },
    filterRow: {
        visible: true
    },
    paging: {
        pageSize: 2
    },
    pager: {
        showPageSizeSelector: true,
        allowedPageSizes: [2, 4, 10],
        showInfo: true,
        visible: true
    },
    searchPanel: {
        visible: true,
        width: 240,
        placeholder: "Tìm kiếm..."
    },
    editing: {
        refreshMode: "full",
        mode: "batch",
        allowAdding: true,
        allowUpdating: true,
        allowDeleting: true,
        texts: {
            confirmDeleteMessage: "Muốn xóa chứ ?",
            deleteRow: "Xóa",
            editRow: "Sửa",
            cancelRowChanges: "Hủy",
            saveRowChanges: "Lưu"

        },
        //popup: {
        //    title: "Chỉnh sửa và thêm mới danh mục sản phẩm",
        //    showTitle: true,
        //    width: 1100,
        //    height: 600,
        //    position: {
        //        my: "top",
        //        at: "top",
        //        of: window
        //    }
        //},
        //form: {
        //    items: [{
        //        itemType: "group",
        //        colCount: 2,
        //        colSpan: 2,
        //        items: ["ID_Product", "IMG1", "IMG2", "IMG3", "IMG4"]
        //    },
        //    {
        //        itemType: "group",
        //        colCount: 2,
        //        colSpan: 2,
        //        caption: "Chú Ý Nên Đọc!",
        //        items: [{
        //            dataField: "Chú thích",
        //            editorType: "dxTextArea",
        //            colSpan: 2,
        //            editorOptions: {
        //                width: 700,
        //                height: 130,
        //                readOnly: true,
        //                value: "1. Muốn sản phẩm hiện trên web phải có ảnh , ít nhất là 1 ảnh , ở ô IMG1 , còn IMG2 ->4 tùy chọn "
        //            }
        //        }
        //        ]
        //    }

        //    ]
        //}
    },
    columns: [
        {

            dataField: "ID_Product",
            caption: "Tên sản phẩm",
            width: 150,
            lookup: {
                dataSource: new DevExpress.data.CustomStore({
                    key: "ID_Product",
                    loadMode: "raw",
                    load: function () {
                        return sendRequest(Url + "/GetIdProductLookUp", "POST");
                    }
                }),
                onValueChanged: function (e) {
                    cellInfo.setValue(e.component.option('selectedItem'));
                },
                valueExpr: "ID_Product",
                displayExpr: "Name_Product"
            },
            validationRules: [{
                type: "required",
                message: "Không được để trống"
            }
            ]
        },
        {
            dataField: "ID_ImageForProduct",
            caption: "Mã ảnh ",
            width: 80,
            allowEditing: false
        },
        {
            dataField: "IMG1",
          
            caption: "Ảnh1",
            editCellTemplate: function (container, cellInfo) {
                var $ac = $("<div>").dxFileUploader({
                    multiple: true,                          
                    uploadMode: "useButtons",
                    uploadUrl: UrlUploadImage + "/UploadImage1/" + cellInfo.data.ID_Product,
                    allowedFileExtensions: [".jpg", ".jpeg", ".gif", ".png"],
                    name: "Anh1",
                    uploadMethod: "POST",
                    labelText: "hoặc kéo thả!",
                    invalidFileExtensionMessage: "Phải không đúng định dạng!",
                    uploadFailedMessage: "Tải lên thất bại!",
                    uploadButtonText: "Tải lên",
                    uploadedMessage: "Tải lên thành công!",
                    readyToUploadMessage: "Sẵn sàng tải lên!",
                    selectButtonText: "Chọn file",
                    onValueChanged: function (e) {
                        $.each(e.value, function (index, val) {
                            cellInfo.setValue(val.name);
                        });

                    }
                });
                $ac.appendTo(container);
            }
            ,
            cellTemplate: function (container, options) {
                $("<div>")
                    .append($("<img>", { "src": "/Content/ImageUploaded/ImageForProduct/" + options.value }))
                    .appendTo(container);
            }
            
        },
        {

            dataField: "IMG2",
            caption: "Ảnh2",
           
            cellTemplate: function (container, options) {
                $("<div>")
                    .append($("<img>", { "src": "/Content/ImageUploaded/ImageForProduct/" + options.value }))
                    .appendTo(container);
            },
            editCellTemplate: function (container, cellInfo) {
                var $ac = $("<div>").dxFileUploader({
                    multiple: true,
                   // uploadMode: "useForm",
                     uploadMode: "useButtons",
                    uploadUrl: UrlUploadImage + "/UploadImage2/" + cellInfo.data.ID_Product,
                    allowedFileExtensions: [".jpg", ".jpeg", ".gif", ".png"],
                    name: "Anh2",
                    uploadMethod: "POST",
                    labelText: "hoặc kéo thả!",
                    invalidFileExtensionMessage: "Phải không đúng định dạng!",
                    uploadFailedMessage: "Tải lên thất bại!",
                    uploadButtonText: "Tải lên",
                    uploadedMessage: "Tải lên thành công!",
                    readyToUploadMessage: "Sẵn sàng tải lên!",
                    selectButtonText: "Chọn file",
                    onValueChanged: function (e) {
                        $.each(e.value, function (index, val) {
                            cellInfo.setValue(val.name);
                        });

                    }
                });
                $ac.appendTo(container);
            }
        },
        {
            dataField: "IMG3",
           
            caption: "Ảnh3",
            editCellTemplate: function (container, cellInfo) {
                var $ac = $("<div>").dxFileUploader({
                    multiple: true,
                    // uploadMode: "useForm",
                    uploadMode: "useButtons",
                    uploadUrl: UrlUploadImage + "/UploadImage3/" + cellInfo.data.ID_Product,
                    allowedFileExtensions: [".jpg", ".jpeg", ".gif", ".png"],
                    name: "Anh3",
                    uploadMethod: "POST",
                    labelText: "hoặc kéo thả!",
                    invalidFileExtensionMessage: "Phải không đúng định dạng!",
                    uploadFailedMessage: "Tải lên thất bại!",
                    uploadButtonText: "Tải lên",
                    uploadedMessage: "Tải lên thành công!",
                    readyToUploadMessage: "Sẵn sàng tải lên!",
                    selectButtonText: "Chọn file",
                    onValueChanged: function (e) {
                        $.each(e.value, function (index, val) {
                            cellInfo.setValue(val.name);
                        });

                    }
                });
                $ac.appendTo(container);
            }
            ,
            cellTemplate: function (container, options) {
                $("<div>")
                    .append($("<img>", { "src": "/Content/ImageUploaded/ImageForProduct/" + options.value }))
                    .appendTo(container);
            }
        }, {

            dataField: "IMG4",          
            caption: "Ảnh4",
            editCellTemplate: function (container, cellInfo) {
                var $ac = $("<div>").dxFileUploader({
                    multiple: true,
                    // uploadMode: "useForm",
                    uploadMode: "useButtons",
                    uploadUrl: UrlUploadImage + "/UploadImage4/" + cellInfo.data.ID_Product,
                    allowedFileExtensions: [".jpg", ".jpeg", ".gif", ".png"],
                    name: "Anh4",
                    uploadMethod: "POST",
                    labelText: "hoặc kéo thả!",
                    invalidFileExtensionMessage: "Phải không đúng định dạng!",
                    uploadFailedMessage: "Tải lên thất bại!",
                    uploadButtonText: "Tải lên",
                    uploadedMessage: "Tải lên thành công!",
                    readyToUploadMessage: "Sẵn sàng tải lên!",
                    selectButtonText: "Chọn file",
                    onValueChanged: function (e) {
                        $.each(e.value, function (index, val) {
                            cellInfo.setValue(val.name);
                        });

                    }
                });
                $ac.appendTo(container);
            },
            cellTemplate: function (container, options) {
                $("<div>")
                    .append($("<img>", { "src": "/Content/ImageUploaded/ImageForProduct/" + options.value }))
                    .appendTo(container);
            }
        }
    ]

}).dxDataGrid("instance");
