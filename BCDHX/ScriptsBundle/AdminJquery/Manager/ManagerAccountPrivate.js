let $ = jQuery.noConflict(), Url = window.location.origin, UrlValidate = window.location.origin + "/AdminBCDH/Manager", formData = { OldPassword: "", Password: "" }, formWidget = $("#UpdatePersonPrivatePassword").dxForm({ formData: formData, readOnly: !1, showColonAfterLabel: !0, showValidationSummary: !0, items: [{ itemType: "group", items: [{ dataField: "OldPassword", caption: "Mật khẩu cũ", validationRules: [{ type: "required", message: "Không được để trống" }, { type: "custom", validationCallback: validateOldPassword, message: "Mật khẩu cũ không đúng!" }] }, { dataField: "Password", label: { text: "Nhập mật khẩu mới" }, editorOptions: { mode: "password" }, validationRules: [{ type: "required", message: "Không được để trống" }, { type: "pattern", pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})", message: "Sai format mật khẩu!" }] }, { label: { text: "Confirm Password" }, editorType: "dxTextBox", editorOptions: { mode: "password" }, validationRules: [{ type: "required", message: "Confirm Password is required" }, { type: "compare", message: "'Mật khẩu' và 'Nhập lại mật khẩu' không trùng khớp", comparisonTarget: function () { return formWidget.option("formData").Password } }] }, { itemType: "button", horizontalAlignment: "left", buttonOptions: { text: "Update", type: "success", useSubmitBehavior: !0 } }] }] }).dxForm("instance"); function ShowMess(e) { 1 == e.Result ? (Swal.fire({ type: "success", title: "Đổi thông tin thành công", showConfirmButton: !1, timer: 1500 }), setTimeout(function () { window.location.reload() }, 2e3)) : (Swal.fire({ type: "error", title: "Lỗi đổi mật khẩu", showConfirmButton: !1, timer: 1500 }), setTimeout(function () { window.location.reload() }, 2e3)) } function ReloadPage() { window.location.reload() } function validateOldPassword(e) { var t = { OldPassword: e.value }; return $.ajax({ url: UrlValidate + "/ValidateOldPassword", method: "POST", data: JSON.stringify(t), contentType: "application/json; charset=utf-8", success: function (t) { e.rule.isValid = t.Result, e.validator.validate() } }), !1 } $("#formUpdatePersonPrivatePassword").on("submit", function (e) { e.preventDefault(); var t = { NewPassword: formWidget.option("formData").Password }; fetch(UrlValidate + "/UpdatePasswordPrivate", { method: "POST", headers: { Accept: "application/json", "Content-Type": "application/json" }, body: JSON.stringify(t) }).then(e => e.json()).then(e => ShowMess(e)) }), $("#UploadImageAvatarPrivatePresonZone").dxFileUploader({ selectButtonText: "Chọn Ảnh", labelText: "Có thể kéo thả", invalidFileExtensionMessage: "Không đúng định dạng file ảnh hỗ trợ!", readyToUploadMessage: "Sẵn sàng để up ảnh", uploadButtonText: "Up Ảnh", uploadedMessage: "Upload thành công!", uploadFailedMessage: "Upload thất bại!", onUploaded: ReloadPage, multiple: !0, uploadMethod: "POST", name: "ImagePrivate", uploadUrl: Url + "/Upload/ProcessChangeAvatarForPrivatePerson", uploadMode: "useButtons", allowedFileExtensions: [".jpg", ".jpeg", ".gif", ".png"] }), $("#UpdatePersonPrivate").on("submit", function (e) { e.preventDefault(); var t = { Fullname: $("#Fullname").val() }; fetch(UrlValidate + "/UpdateFullnamePrivate", { method: "POST", headers: { Accept: "application/json", "Content-Type": "application/json" }, body: JSON.stringify(t) }).then(e => e.json()).then(e => ShowMess(e)) });