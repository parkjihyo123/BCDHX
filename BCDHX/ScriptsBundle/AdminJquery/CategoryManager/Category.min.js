var Url = window.location.origin + "/AdminBCDH/ProcessWithCategory", UrlUploadImage = window.location.origin + "/Upload", $ = jQuery.noConflict(); let StatusCategory = [{ Value: "true", Text: "Hoạt động" }, { Value: "false", Text: "Ngừng hoạt động" }], StatusCategoryPerform = [{ Value: 1, Text: "Bình thường" }, { Value: 2, Text: "Hàng mới về" }, { Value: 3, Text: "Hàng bán chạy" }, { Value: 4, Text: "Giá tốt nhất" }]; var ordersStore = new DevExpress.data.CustomStore({ key: "ID_Category", load: function () { return sendRequest(Url + "/GetCategories", "GET") }, insert: function (e) { return sendRequest(Url + "/AddCategory", "POST", { values: JSON.stringify(e) }) }, update: function (e, t) { return sendRequest(Url + "/EditCategory", "POST", { key: e, values: JSON.stringify(t) }) }, remove: function (e) { return sendRequest(Url + "/DeleteCategory", "POST", { key: e }) } }); function sendRequest(e, t, a) { var n = $.Deferred(); return t = t || "GET", $.ajax(e, { method: t || "GET", data: a, cache: !1, xhrFields: { withCredentials: !0 } }).done(function (e) { n.resolve("GET" === t ? e.data : e) }).fail(function (e) { n.reject(e.responseJSON ? e.responseJSON.Message : e.statusText) }), n.promise() } function validateIdCategory(e) { var t = { ID_Category: e.data.ID_Category, Name_Category: e.data.Name_Category }; return $.ajax({ url: Url + "/IsVadiateIdCategory", method: "POST", data: { data: t }, success: function (t) { e.rule.isValid = t.Result, e.rule.message = t.Message, e.validator.validate() } }), !1 } $("#Category").dxDataGrid({ dataSource: ordersStore, repaintChangesOnly: !0, showBorders: !0, editing: { refreshMode: "full", mode: "popup", allowAdding: !0, allowUpdating: !0, allowDeleting: !0, texts: { confirmDeleteMessage: "Muốn xóa chứ ?", deleteRow: "Xóa", editRow: "Sửa", cancelRowChanges: "Hủy", saveRowChanges: "Lưu" }, popup: { title: "Chỉnh sửa và thêm mới danh mục sản phẩm", showTitle: !0, width: 1100, height: 600, position: { my: "top", at: "top", of: window } }, form: { items: [{ itemType: "group", colCount: 2, colSpan: 2, items: ["ID_Category", "Name_Category", "Title", "PartenID", "StatusCategory", "CreateDate", "CreateBy", "LastModified", "LastModifiedBy", "Isactive"] }, { itemType: "group", colCount: 1, colSpan: 2, caption: "Chú Ý Nên Đọc!", items: [{ dataField: "Chú thích", editorType: "dxTextArea", colSpan: 2, editorOptions: { width: 700, height: 130, readOnly: !0, value: "1. Muốn tạo một danh mục sản phẩm mới , thì nhưng chỗ có * đỏ là cần thiết phải có. Mã danh mục không được trùng nhau\n2. Danh mục con tức là danh mục được tạo là con của danh mục mẹ sẽ được hiện thi theo cấp ở web chính.Nếu là danh mục gốc thì để trống\n3. Các phần còn lại thì điền đủ và đúng là được!" } }] }] } }, scrolling: { mode: "virtual" }, columnsAutoWidth: !0, showBorders: !0, filterRow: { visible: !0, applyFilter: "auto" }, searchPanel: { visible: !0, width: 240, placeholder: "Tìm kiếm..." }, headerFilter: { visible: !0 }, columns: [{ dataField: "ID_Category", caption: "Mã danh mục", validationRules: [{ type: "required", message: "Không được bỏ trống ID" }, { type: "custom", validationCallback: validateIdCategory }] }, { dataField: "Name_Category", caption: "Tên danh mục", validationRules: [{ type: "required", message: "Không được để trống" }] }, { dataField: "Title", caption: "Chủ đề danh mục", validationRules: [{ type: "required", message: "Không được để trống" }] }, { dataField: "CreateDate", caption: "Ngày tạo", dataType: "date", validationRules: [{ type: "required", message: "Không được để trống" }] }, { dataField: "PartenID", caption: "Danh mục con của", editCellTemplate: function (e, t) { $("<div>").dxSelectBox({ dataSource: new DevExpress.data.CustomStore({ key: "IDCategory", loadMode: "raw", load: function () { return sendRequest(Url + "/GetIdOfCategory", "POST") } }), displayExpr: "NameCategory", valueExpr: "IDCategory", showClearButton: !0, placeholder: "Chọn", hoverStateEnabled: !0, onValueChanged: function (e) { $.each(e.value, function (a, n) { t.setValue(e.component.option("selectedItem")) }) } }).appendTo(e) } }, { dataField: "StatusCategory", caption: "Trạng thái danh mục(Hot,new,bestdeal)", validationRules: [{ type: "required", message: "Không được để trống" }], lookup: { dataSource: StatusCategoryPerform, valueExpr: "Value", displayExpr: "Text", paginate: !0 } }, { dataField: "CreateBy", caption: "Tạo bởi", validationRules: [{ type: "required", message: "Không được để trống" }] }, { dataField: "LastModified", caption: "Sửa đổi cuối", dataType: "date", validationRules: [{ type: "required", message: "Không được để trống" }] }, { dataField: "LastModifiedBy", caption: "Sửa đổi cuối bởi", validationRules: [{ type: "required", message: "Không được để trống" }] }, { dataField: "Isactive", caption: "Trạng Thái danh mục", dataType: "boolean", validationRules: [{ type: "required", message: "Không được để trống" }], lookup: { dataSource: StatusCategory, valueExpr: "Value", displayExpr: "Text", paginate: !0 } }] }).dxDataGrid("instance");