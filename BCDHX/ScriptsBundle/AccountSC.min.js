var Url = window.location.origin; function Dangky() { var t = $("input[name='Fullname']").val(), o = $("input[name='Email']").val(), n = $("input[name='Address']").val(), r = { Username: o, Password: $("input[name='Password']").val(), Fullname: t, Address: n }; $.ajax({ type: "POST", url: Url + "/Account/Register", data: JSON.stringify(r), contentType: "application/json; charset=utf-8", beforeSend: function () { $("body").loadingModal({ position: "auto", text: "", color: "#fff", opacity: "0.7", backgroundColor: "rgb(0,0,0)", animation: "circle" }) }, success: function (t) { $("body").loadingModal("destroy"), 1 == t ? ($("#sumerror").html(""), Swal.fire({ type: "success", title: "Đăng ký thành công, xin kiểm tra lại email để kích hoạt tài khoản ,để chính thức thành khách hàng quen thuộc của shop nhé!", showConfirmButton: !0, confirmButtonColor: "#F3D930" }).then(t => { t.value && (window.location.href = Url + "/Account/Login") })) : $("#sumerror").html("<span style='color:red'>" + t + "</span>") }, error: function (t, o, n) { var r = t.status + ": " + t.statusText; alert("Error - " + r) } }) } function showModelReSend() { $("#ResendConfirmEmail").modal("show") } function ShowModalForgot() { $("#ForgotPasswordModal").modal("show") } function SendToExternalLogin(t, o) { var n = { returnUrl: t, provider: o }; $.ajax({ type: "POST", url: Url + "/Account/ExternalLogin", data: JSON.stringify(n), contentType: "application/json; charset=utf-8", beforeSend: function () { $("body").loadingModal({ position: "auto", text: "", color: "#fff", opacity: "0.7", backgroundColor: "rgb(0,0,0)", animation: "circle" }) }, success: function (t) { $("body").loadingModal("destroy"), alert("xx") }, error: function (t, o, n) { var r = t.status + ": " + t.statusText; alert("Error - " + r) } }) } function LoginWithExternal(t) { $("#providerID").val(t), document.getElementById("formLogin").submit() } $("#uploadimge").dxFileUploader({ selectButtonText: "Chọn Ảnh", labelText: "Có thể kéo thả", invalidFileExtensionMessage: "Không đúng định dạng file ảnh hỗ trợ!", readyToUploadMessage: "Sẵn sàng để up ảnh", uploadButtonText: "Up Ảnh", uploadedMessage: "Upload thành công!", uploadFailedMessage: "Upload thất bại!", multiple: !0, uploadMethod: "POST", name: "ImageUp", uploadUrl: Url + "/Upload/UploadImage", uploadMode: "useButtons", allowedFileExtensions: [".jpg", ".jpeg", ".gif", ".png"] }), jQuery.validator.addMethod("validateEmail", function (t, o) { return this.optional(o) || /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/i.test(t) }, "Email phải đúng định dạng!"), jQuery.validator.addMethod("validatePassowrd", function (t, o) { return this.optional(o) || /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(?=.{8,})/i.test(t) }, "Mật khẩu phải chứa ít nhất một kí tự in hoa,gồm số và kí tự đặc biệt.Độ dài mật khẩu lớn hơn 8!"), $("#dangkyform").validate({ rules: { Fullname: "required", Email: { required: !0, validateEmail: !0 }, Password: { required: !0, validatePassowrd: !0 }, Repassword: { equalTo: "#Password", required: !0 }, Address: { required: !0, minlength: 5 } }, messages: { Fullname: "Hãy cho chúng tôi biết họ và tên!", Email: { required: "Hãy điền vào email của bạn!" }, Address: { required: "Hãy cho chúng tôi biết địa chỉ của bạn!", minlength: "Địa chỉ phải rõ ràng một chút!" }, Password: { required: "Xin nhập vào password!" }, Repassword: { required: "Xin nhập lại password!", equalTo: "Mật khẩu không trùng nhau!" } }, submitHandler: function (t) { Dangky() } }), $("#LoginForm").on("submit", function (t) { t.preventDefault(); var o = { Email: $("#Username").val(), Password: $("#Password").val(), RememberMe: $("input[type='checkbox']").val(), ReturnLink: $("#ReturnLink").val() }; $.ajax({ type: "POST", url: Url + "/Account/Login", data: JSON.stringify(o), contentType: "application/json; charset=utf-8", beforeSend: function () { $("body").loadingModal({ position: "auto", text: "", color: "#fff", opacity: "0.7", backgroundColor: "rgb(0,0,0)", animation: "circle" }) }, success: function (t) { $("body").loadingModal("destroy"), 0 == t.Status && "Done" == t.Error ? ($("#sumerror").html(""), Swal.fire({ type: "success", title: "Đăng nhập thành công!", showConfirmButton: !1, timer: 1500 }), setTimeout(function () { var o = t.ReturnUrl; window.location.href = null == o ? Url : Url + o }, 2e3)) : 1 == t.Status ? $("#sumerror").html("<span style='color:red'>" + t.Error + "</span>") : 2 == t.Status ? $("#sumerror").html("<span style='color:red'>Tài khoản cần phải kích hoạt để trở thành khách hàng thân thiết của shop, xin lỗi vì sự bất tiện này. Xin kiểm tra lại hòm thư email để kích hoạt tài khoản!.Nếu không nhận được thư thì bấm vào đây để gửi lại:</span><a style='float:none' herf='#'onClick='return showModelReSend();'>Click!</a>") : $("#sumerror").html("<span style='color:red'>" + t.Error + "</span>") }, error: function (t, o, n) { var r = t.status + ": " + t.statusText; alert("Error - " + r) } }) }), $("#resendconfirm").on("submit", function (t) { t.preventDefault(); var o = { Username: $("#ReSendConfirmUserName").val() }; $.ajax({ type: "POST", url: Url + "/Account/ReSendConfirmEmail", data: JSON.stringify(o), contentType: "application/json; charset=utf-8", beforeSend: function () { $("body").loadingModal({ position: "auto", text: "", color: "#fff", opacity: "0.7", backgroundColor: "rgb(0,0,0)", animation: "circle" }) }, success: function (t) { $("body").loadingModal("destroy"), 0 == t.Status ? ($("#SumErrorResend").html(""), Swal.fire({ type: "success", title: t.Error, showConfirmButton: !0, confirmButtonColor: "#F3D930" })) : 1 != t.Status && 2 != t.Status || $("#SumErrorResend").html("<span style='color:red'>" + t.Error + "</span>") }, error: function (t, o, n) { var r = t.status + ": " + t.statusText; alert("Error - " + r) } }) }), $("#ForgotPasswordForm").on("submit", function (t) { t.preventDefault(); var o = { Email: $("#ForgotPasswordEmail").val() }; $.ajax({ type: "POST", url: Url + "/Account/ForgotPassword", data: JSON.stringify(o), contentType: "application/json; charset=utf-8", beforeSend: function () { $("body").loadingModal({ position: "auto", text: "", color: "#fff", opacity: "0.7", backgroundColor: "rgb(0,0,0)", animation: "circle" }) }, success: function (t) { $("body").loadingModal("destroy"), 0 == t.Status ? ($("#SumErrorForgot").html(""), Swal.fire({ type: "success", title: t.Error, showConfirmButton: !0, confirmButtonColor: "#F3D930" })) : 1 == t.Status && $("#SumErrorForgot").html("<span style='color:red'>" + t.Error + "</span>") }, error: function (t, o, n) { var r = t.status + ": " + t.statusText; alert("Error - " + r) } }) }), $("#dangkyformExternal").on("submit", function (t) { t.preventDefault(); var o = { Username: $("#EmailExternal").val(), Fullname: $("#FullnameExternal").val(), Address: $("#AddressExternal").val(), ReturnLink: $("#returnUrlExternal").val() }; $.ajax({ type: "POST", url: Url + "/Account/ExternalLoginConfirmation", data: JSON.stringify(o), contentType: "application/json; charset=utf-8", beforeSend: function () { $("body").loadingModal({ position: "auto", text: "", color: "#fff", opacity: "0.7", backgroundColor: "rgb(0,0,0)", animation: "circle" }) }, success: function (t) { $("body").loadingModal("destroy"), 0 == t.Status ? (Swal.fire({ type: "success", title: t.Error, timer: 1500 }), setTimeout(function () { window.location.href = Url + "/Manage" }, 2500)) : 2 == t.status ? (Swal.fire({ type: "error", title: t.Error, showConfirmButton: !1, timer: 1500 }), setTimeout(function () { window.location.href = Url + "/Account/Login" }, 2500)) : (Swal.fire({ type: "error", title: t.Error, timer: 2500 }), setTimeout(function () { window.location.href = Url + "/Account/Login" }, 3500)) }, error: function (t, o, n) { var r = t.status + ": " + t.statusText; alert("Error - " + r) } }) });

